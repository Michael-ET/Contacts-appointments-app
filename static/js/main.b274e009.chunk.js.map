{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","props","onChange","contacts","map","contact","value","name","AppointmentForm","title","setTitle","setContact","date","setDate","time","setTime","handleSubmit","min","Date","toLocaleDateString","split","month","day","year","padStart","getTodayString","onSubmit","type","e","target","Tile","object","i","length","className","id","phone","email","tileList","objArr","index","AppointmentsPage","appointments","addAppointment","useState","preventDefault","TileList","ContactForm","setName","setPhone","setEmail","tpye","pattern","ContactsPage","addContact","duplicateName","setDuplicateName","useEffect","style","alert","stlye","App","setContacts","setAppointments","ROUTES","to","activeClassName","exact","path","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b274e009.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = (props) => {\r\n\r\nconst onChange = props.onChange;\r\n\r\n\r\n  return (\r\n    <select onChange={onChange}>\r\n      \r\n     <option >{'select a contact'}</option>\r\n\r\n\r\n\r\n     {props.contacts.map(contact=> <option key={contact.name} value={contact.name}>{contact.name}</option>)}\r\n \r\n    </select>\r\n    \r\n  );\r\n};\r\n\r\nexport default ContactPicker;","import React from \"react\";\r\nimport ContactPicker from '../contactPicker/ContactPicker';\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  // contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  const handleTitle = (e) => {\r\n    setTitle(e.target.value)\r\n  }\r\n  const handleContact = (e) => {\r\n    setContact(e.target.value)\r\n  }\r\n  const handleDate = (e) => {\r\n    setDate(e.target.value)\r\n  }\r\n  const handleTime = (e) => {\r\n    setTime(e.target.value)\r\n  }\r\n\r\n  const min = getTodayString();\r\n  \r\n  return (\r\n\r\n    <form onSubmit={handleSubmit}>\r\n      <input \r\n        type={'text'}\r\n        value={title}\r\n        onChange={handleTitle}\r\n      ></input>\r\n      <ContactPicker\r\n        contacts={contacts}\r\n        \r\n        onChange={handleContact}\r\n      />\r\n      <input \r\n        type={'date'}\r\n        value={date}\r\n        onChange={handleDate}\r\n        min={min}\r\n      ></input>\r\n      <input \r\n        type={'time'}\r\n        value={time}\r\n        onChange={handleTime}\r\n      ></input>    \r\n      <button>Submit</button>  \r\n    \r\n    </form>\r\n\r\n\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\n\r\nexport const Tile = (object) => {\r\n\r\n\r\n  for(let i=0; i<object.length; i++){\r\n    \r\n  }\r\n\r\n  return (\r\n    \r\n    <div className=\"tile-container\">\r\n      <div className='title-title'>\r\n        {object.value.title ? <p id='contactFont'>{object.value.title} with {object.value.contact}<br></br>{object.value.date} at {object.value.time}</p> : <p id='contactFont'>{object.value.name} - {object.value.phone} - {object.value.email}</p> }\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Tile;","import React from \"react\";\r\nimport Tile from '../tile/Tile'\r\n\r\nexport const tileList = ({objArr}) => {\r\n  return (\r\n    <div>\r\n       {objArr.map( (value, index) => <Tile value={value} key={index}/>)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default tileList\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { AppointmentForm } from \"../../components/appointmentForm/AppointmentForm\";\r\nimport TileList from \"../../components/tileList/TileList\";\r\n\r\nexport const AppointmentsPage = (props) => {\r\n  \r\n  const appointments = props.appointments;\r\n  const contacts = props.contacts;\r\n  const addAppointment = props.addAppointment;\r\n  \r\n  /*Define state variables for appointment info*/\r\n  const [title, setTitle] = useState('');\r\n  const [contact, setContact] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [time, setTime] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*Add contact info and clear data  */\r\n    addAppointment(title, contact, date, time)\r\n    setTitle('')\r\n    setContact('')\r\n    setDate('')\r\n    setTime('')\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm\r\n          title={title}\r\n          contacts={contacts}\r\n          date={date}\r\n          time={time}\r\n          setTitle={setTitle}\r\n          setContact={setContact}\r\n          setDate={setDate}\r\n          setTime={setTime}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n        <TileList objArr={appointments}/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit\r\n}) => {\r\n\r\n\r\nconst handleTel = (e) => {\r\n  setPhone(e.target.value)\r\n}\r\nconst handleEmail = (e) => {\r\n  setEmail(e.target.value)\r\n}\r\nconst handleName = (e) => {\r\n  setName(e.target.value)\r\n}\r\n\r\n  return (\r\n\r\n    <form onSubmit={handleSubmit}>\r\n\r\n      <input \r\n        type={'text'} \r\n        value={name} \r\n        onChange={handleName}\r\n      ></input>\r\n      <input \r\n        tpye=\"tel\" \r\n        value={phone} \r\n        onChange={handleTel} \r\n        pattern=\"^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$\"\r\n      ></input>\r\n      <input \r\n        type='email' \r\n        value={email} \r\n        onChange={handleEmail}\r\n      ></input>\r\n\r\n      <button>Submit</button>\r\n      \r\n      \r\n    </form>\r\n   \r\n\r\n  );\r\n};\r\n\r\n","import React from 'react'\r\nimport {useState, useEffect} from \"react\";\r\nimport style from './style.css'\r\nimport {ContactForm} from '../../components/contactForm/ContactForm'\r\nimport TileList from '../../components/tileList/TileList'\r\n\r\nexport const ContactsPage = (props) => {\r\n  const contacts = props.contacts;\r\n  const addContact = props.addContact;\r\n\r\n  const  [name,  setName] = useState('')\r\n  const  [phone, setPhone] = useState('')\r\n  const  [email, setEmail] = useState('')\r\n  const  [duplicateName, setDuplicateName] = useState(false)\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(duplicateName === false){\r\n      addContact(name, phone, email)\r\n      setName('')\r\n      setPhone('')\r\n      setEmail('')\r\n    }else{\r\n      alert('Duplicate name')   \r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n      for(const contact of contacts){\r\n         if(name === contact.name){\r\n          setDuplicateName(true)  \r\n        }\r\n        return       \r\n      }\r\n    }, [name, contacts])\r\n\r\n  return (\r\n    <div style={style}>\r\n      <section>\r\n        <h2 style={style}>Add Contact</h2> \r\n        <ContactForm\r\n          setName={setName}\r\n          setEmail={setEmail}\r\n          setPhone={setPhone}\r\n          name={name}\r\n          phone={phone}\r\n          email={email}\r\n          handleSubmit={handleSubmit}\r\n          />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2 stlye={style}>Contacts</h2>\r\n        <TileList objArr={props.contacts} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {useState} from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nexport function App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n\r\n  const [contacts, setContacts] = useState([])\r\n  const [appointments, setAppointments] = useState([])\r\n  \r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n\r\nconst addContact = (name, phone, email) => {\r\n  setContacts((prev)=>{\r\n    \r\n      return [...prev, { name, email, phone } ]    \r\n   })\r\n};\r\n\r\nconst addAppointment = (title, contact, date, time) =>{\r\n  setAppointments((prev)=>{\r\n    return [...prev, {title, contact, date, time}]\r\n  })\r\n}\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} id='title' activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} id='title' activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n             {/* Add props to ContactsPage */}\r\n            <ContactsPage contacts={contacts} addContact={addContact}/>\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            {/* Add props to AppointmentsPage */}\r\n            <AppointmentsPage appointments={appointments} contacts={contacts} addAppointment={addAppointment}/>\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}